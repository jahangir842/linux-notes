*******************************************************
		  Docker volumes 
*******************************************************
Docker volumes are a way to persist data generated by and used by Docker containers. They are managed by Docker and can be used to share data between containers and between the host system and containers. There are three main types of Docker volumes:
*******************************************************
1. **Named Volumes**:
   - **Description**: These are created and managed by Docker and have a specific name.
   - **Usage**: Useful for data that needs to persist beyond the lifecycle of a container.
   - **Example**: 
     ```bash
     docker volume create my_volume
     docker run -d -v my_volume:/data my_image
     ```
*******************************************************
2. **Anonymous Volumes**:
   - **Description**: These are similar to named volumes but without a specific name. Docker generates a random name for the volume.
   - **Usage**: Suitable for temporary data that does not need to be named or referenced after the container's lifecycle ends.
   - **Example**:
     ```bash
     docker run -d -v /data my_image
     ```
   - **Note**: Docker automatically creates an anonymous volume each time you mount a volume without specifying a name.
*******************************************************
3. **Host Volumes (Bind Mounts)**:
   - **Description**: These directly mount a directory from the host filesystem to the container.
   - **Usage**: Useful for sharing data between the host and the container or for development purposes where you need to access code and resources from the host machine.
   - **Example**:
    docker run -d -v /host/path:/container/path my_image

*******************************************************
Differences and Use Cases
*******************************************************
- **Named Volumes**:
  - Persist data in a dedicated Docker-managed location.
  - Easy to back up and migrate.
  - Used for databases, configuration files, and data that needs to persist across container restarts.

- **Anonymous Volumes**:
  - Automatically managed by Docker.
  - Good for temporary data storage.
  - Less suited for scenarios where you need to access or manage the data outside the container.

- **Host Volumes (Bind Mounts)**:
  - Directly map a host directory to a container directory.
  - Changes in the host directory immediately reflect in the container and vice versa.
  - Used for development environments, where you need live updates or direct access to host files.

