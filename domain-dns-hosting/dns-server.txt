
********************************************************************************
******************************* DNS Server *************************************
********************************************************************************
BIND (Berkeley Internet Name Domain), which is a widely used and highly reliable DNS software.

Check if BIND (named) is already Installed:

	dpkg -l | grep bind9

Check if the named (BIND9) Service is Running:

	sudo systemctl status bind9
	or
	sudo systemctl status named
	
Check if DNS port is already listening:
	
	sudo ss -tuln | grep :53
	or
	sudo nmap -sT -O localhost
	or
	sudo lsof -i -P -n | grep LISTEN

********************************************************************************
******************************* Setting Hostname *******************************
********************************************************************************

set a FQDN:
Note: An FQDN includes the host name, domain name, and top-level domain (TLD),
providing a complete path to a specific resource on the internet.

	sudo hostnamectl set-hostname ns1.jagz.ai
	
verify hostname:

	hostname
	
Edit the /etc/hosts file using a text editor like Nano or Vim.

Add your FQDN after localhost. For example:

	127.0.0.1 localhost ns1.jagz.ai ns1

ns1.jagz.ai is FQDN and ns1 is hostname.

restart the systemd-resolved.service

	sudo systemctl restart systemd-resolved.service
	
********************************************************************************
******************************* Bind9 Installation *****************************
********************************************************************************

Update system:

	sudo apt update

Install the BIND DNS server package (bind9):

	sudo apt install bind9

verify:
	nslookup ns1
	
this output will be: 
			Server:		127.0.0.53
			Address:	127.0.0.53#53

			Name:	ns1
			Address: 192.168.43.194
			Name:	ns1
			Address: fe80::ed6f:4219:175:6bdd

Note: the server is (127.0.0.53).................it will be changed in later configurations.
	
********************************************************************************
******************************* Configuration **********************************
********************************************************************************
	
Configuration Files:
Once installed, BIND's configuration files are located in the /etc/bind/ directory. 

The main configuration file is named.conf.

	sudo nano /etc/bind/named.conf
	
This file looks like this: (remember the 03 included files for different type of configurations)

			// This is the primary configuration file for the BIND DNS server named.
			// Please read /usr/share/doc/bind9/README.Debian.gz for information on the
			// structure of BIND configuration files in Debian, *BEFORE* you customize
			// this configuration file.
			// If you are just adding zones, please do that in /etc/bind/named.conf.local
			include "/etc/bind/named.conf.options"; //------------ for GLOBAL OPTIONS
			include "/etc/bind/named.conf.local"; //-------------- for Zones Info
			include "/etc/bind/named.conf.default-zones"; //------ for Default zones

********************************************************************************
**************** GLOBAL OPTIONS File: named.conf.options ***********************
********************************************************************************
Open this file:

	sudo nano /etc/bind/named.conf.options
	
This file is used to configure global options for the BIND DNS server. It includes settings such as directory paths, logging options, recursion settings, and forwarders. Here's an example of what named.conf.options might look like:

	options {
		directory "/var/cache/bind";
		recursion yes;
		allow-query { any; }; // we can allow our subnet only.
		listen-on port 53 {127.0.0.1; 192.168.43.194;}; // here mention the dns ip
		forwarders {
		        8.8.8.8;    // Google's DNS server
		        8.8.4.4;
		 };      
	};

			
In above example, the directory option specifies where BIND should store its cache files, recursion enables recursive DNS queries, allow-query specifies who can query this DNS server, and forwarders specifies external DNS servers to forward queries to.

Syntax Check of BIND Configuration Files:
BIND provides a tool called named-checkconf that checks the syntax of the BIND configuration files (named.conf, named.conf.options, named.conf.local, etc.) for errors. 

	sudo named-checkconf

If there are any syntax errors in your configuration files, this command will point them out, helping you identify and fix issues before restarting the DNS server.

********************************************************************************
******************* Zones Info File: named.conf.local **************************
********************************************************************************
Open this file:
	
	sudo nano /etc/bind/named.conf.local

This file is used to configure local zones hosted by the BIND DNS server. Local zones are typically used for internal networks or custom domains. e.g:

			zone "jagz.ai" {
			    type master;
			    file "/etc/bind/zones/jagz.ai.zone";
			};

			zone "192.168.1.in-addr.arpa" {
			    type master;
			    file "/etc/bind/zones/1.168.192.in-addr.arpa.zone";
			};

In this example, two zones are defined: jagz.ai and 192.168.1.in-addr.arpa. The type master indicates that BIND is the master server for these zones, and the file directive specifies the zone files where DNS records for these zones are stored.

********************************************************************************
************ Default zones File: named.conf.default-zones **********************
********************************************************************************
Open this file:

	sudo nano /etc/bind/named.conf.default-zones
 
This file contains default zone configurations that are commonly used in DNS setups. It includes zones such as the root hints zone (.) and reverse lookup zones for IPv4 and IPv6 loopback addresses. e.g:


	zone "." {
	    type hint;
	    file "/etc/bind/db.root";
	};

	zone "localhost" {
	    type master;
	    file "/etc/bind/db.local";
	};

	zone "127.in-addr.arpa" {
	    type master;
	    file "/etc/bind/db.127";
	};

	zone "0.in-addr.arpa" {
	    type master;
	    file "/etc/bind/db.0";
	};

	zone "255.in-addr.arpa" {
	    type master;
	    file "/etc/bind/db.255";
	};

These zones handle essential DNS functions, such as resolving root DNS servers (.), handling localhost queries, and managing reverse lookups for IPv4 addresses.


********************************************************************************
**************************    Create DB Files   ********************************
********************************************************************************

	sudo mkdir /etc/bind/zones

	sudo cp /etc/bind/db.local /etc/bind/zones/jagz.ai.zone

	sudo nano /etc/bind/zones/jagz.ai.zone

Use the following configuration:
	
	$TTL    604800
@       IN      SOA     ns1.jagz.ai. admin.jagz.ai. (
                  3     ; Serial
             604800     ; Refresh
              86400     ; Retry
            2419200     ; Expire
             604800 )   ; Negative Cache TTL
;
; name servers - NS records
     IN      NS      ns1.jagz.ai.
     IN      NS      ns2.jagz.ai.

; name servers - A records
ns1.jagz.ai.          IN      A       192.168.43.194
ns2.jagz.ai.          IN      A       192.168.43.195

; 10.128.0.0/16 - A records
host1.nyc3.example.com.        IN      A      192.168.43.194
host2.nyc3.example.com.        IN      A      192.168.43.195


********************************************************************************
************************** Client Configuration ********************************
********************************************************************************
if windows: edit network adopter configuration

if linux:

Configure systemd-resolved:

	sudo nano /etc/systemd/resolved.conf

In the [Resolve] section of the file, add or modify the DNS option to include your desired DNS server(s). For example:

	DNS=192.168.43.194

Save the file and exit the text editor.

Restart systemd-resolved:

	sudo systemctl restart systemd-resolved

This will apply your DNS server settings and update the /etc/resolv.conf symlink accordingly.

Verify DNS Configuration:

	resolvectl status

Verify that your DNS server (e.g 192.168.43.194) is listed and being used for DNS resolution.

Test DNS Resolution:

	nslookup www.google.com

Ensure that the DNS server used for resolution is 192.168.43.194 rather than 127.0.0.53.


********************************************************************************
*************** if Client Rosolve still from 127.0.0.53 ************************
********************************************************************************

If your /etc/resolv.conf symlink has not been overwritten yet and you want to ensure that it points to your desired DNS server (192.168.43.194), you can manually update the symlink to reflect your DNS configuration. Here's how you can do it:

First, remove the existing symlink /etc/resolv.conf:

	sudo rm /etc/resolv.conf

Create a New /etc/resolv.conf File:

	sudo nano /etc/resolv.conf

Add DNS Server Configuration:

			nameserver 192.168.43.194

Save the file and exit the text editor.

To prevent the file from being overwritten in the future, you can set it as immutable:

    sudo chattr +i /etc/resolv.conf

This command makes the file immutable, meaning it cannot be modified or deleted until you remove the immutable attribute (-i).

Test DNS Resolution:

	nslookup www.google.com

Ensure that the DNS server used for resolution is 192.168.43.194 rather than 127.0.0.53.

